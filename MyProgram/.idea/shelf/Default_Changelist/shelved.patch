Index: myapp1/src/main/java/com/example/myapp1/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapp1;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        Intent intent;\r\n\r\n        switch(v.getId()) {\r\n            case R.id.buttonFlat:\r\n                intent = new Intent(this, ShowFlatsActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n            case R.id.buttonGuest:\r\n                intent = new Intent(this, ShowGuestActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n            case R.id.buttonRent:\r\n                intent = new Intent(this, ShowRentsActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/java/com/example/myapp1/MainActivity.java	(date 1576244164000)
+++ myapp1/src/main/java/com/example/myapp1/MainActivity.java	(date 1576479973371)
@@ -31,6 +31,11 @@
                 intent = new Intent(this, ShowRentsActivity.class);
                 startActivity(intent);
                 break;
+            case R.id.buttonAut:
+                // intent = new Intent(this, EmailPasswordActivity.class);
+                // startActivity(intent);
+                break;
+
 
         }
     }
Index: myapp1/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <Button\r\n        android:id=\"@+id/buttonFlat\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:onClick=\"onClick\"\r\n        android:text=\"Flats\"\r\n        tools:layout_editor_absoluteX=\"111dp\"\r\n        tools:layout_editor_absoluteY=\"107dp\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/buttonGuest\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:onClick=\"onClick\"\r\n        android:text=\"Guests\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/buttonFlat\"\r\n        tools:layout_editor_absoluteX=\"111dp\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/buttonRent\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:onClick=\"onClick\"\r\n        android:text=\"RENT\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/buttonGuest\"\r\n        tools:layout_editor_absoluteX=\"111dp\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/res/layout/activity_main.xml	(date 1576244164000)
+++ myapp1/src/main/res/layout/activity_main.xml	(date 1576478850808)
@@ -32,4 +32,13 @@
         android:text="RENT"
         app:layout_constraintTop_toBottomOf="@+id/buttonGuest"
         tools:layout_editor_absoluteX="111dp" />
+
+    <Button
+        android:id="@+id/buttonAut"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:onClick="onClick"
+        android:text="AUTEN"
+        app:layout_constraintTop_toBottomOf="@+id/buttonRent"
+        tools:layout_editor_absoluteX="111dp" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: myapp1/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#008577</color>\r\n    <color name=\"colorPrimaryDark\">#00574B</color>\r\n    <color name=\"colorAccent\">#D81B60</color>\r\n    <color name=\"Bckgr\">#9C9C9C</color>\r\n    <color name=\"Red\">#33FF0000</color>\r\n    <color name=\"Orange\">#33FFFF00</color>\r\n    <color name=\"Green\">#3300FF00</color>\r\n    <color name=\"Black\">#000000</color>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/res/values/colors.xml	(date 1576244164000)
+++ myapp1/src/main/res/values/colors.xml	(date 1576478850829)
@@ -8,4 +8,8 @@
     <color name="Orange">#33FFFF00</color>
     <color name="Green">#3300FF00</color>
     <color name="Black">#000000</color>
+
+    <color name="grey_100">#F5F5F5</color>
+    <color name="grey_300">#E0E0E0</color>
+    <color name="grey_500">#9E9E9E</color>
 </resources>
Index: myapp1/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.2\"\r\n\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.myapp1\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n    implementation 'ru.tinkoff.decoro:decoro:1.3.5'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/build.gradle	(date 1576244164000)
+++ myapp1/build.gradle	(date 1576475183459)
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.application'
+apply plugin: 'com.google.gms.google-services'
 
 android {
     compileSdkVersion 29
@@ -29,6 +30,8 @@
 
     implementation 'androidx.appcompat:appcompat:1.1.0'
     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
+    implementation 'com.google.firebase:firebase-core:16.0.4'
+    implementation 'com.google.firebase:firebase-auth:16.0.5'
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.1'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
Index: myapp1/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/res/values/styles.xml	(date 1576244164000)
+++ myapp1/src/main/res/values/styles.xml	(date 1576479856171)
@@ -9,3 +9,4 @@
     </style>
 
 </resources>
+
Index: myapp1/src/main/res/values/dimens/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/res/values/dimens/dimens.xml	(date 1576475687578)
+++ myapp1/src/main/res/values/dimens/dimens.xml	(date 1576475687578)
@@ -0,0 +1,12 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+
+    <dimen name="icon_top_margin">24dp</dimen>
+    <dimen name="icon_bottom_margin">24dp</dimen>
+    <dimen name="title_bottom_margin">16dp</dimen>
+    <dimen name="field_width_standard">160dp</dimen>
+
+    <dimen name="button_horizontal_margin">8dp</dimen>
+</resources>
Index: myapp1/src/main/java/com/example/myapp1/EditRentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapp1;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ContentValues;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.SimpleCursorAdapter;\r\nimport android.widget.Spinner;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.Period;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\nimport ru.tinkoff.decoro.MaskImpl;\r\nimport ru.tinkoff.decoro.slots.PredefinedSlots;\r\nimport ru.tinkoff.decoro.watchers.FormatWatcher;\r\nimport ru.tinkoff.decoro.watchers.MaskFormatWatcher;\r\n\r\nimport static com.example.myapp1.R.id.EditTextDuration;\r\nimport static com.example.myapp1.R.id.EditTextNoteRent;\r\nimport static com.example.myapp1.R.id.end;\r\n\r\npublic class EditRentActivity extends AppCompatActivity {\r\n\r\n\r\n    private Button delButton;\r\n    private Button saveButton;\r\n    private Button buttonSelectGuest;\r\n\r\n    private AutoCompleteTextView acEditTextViewFIO;\r\n\r\n    private DatabaseHelper sqlHelper;\r\n    private SQLiteDatabase db;\r\n\r\n    private EditText editTextFio;\r\n    private EditText editTextPhone;\r\n    private EditText editTextCostFlat;\r\n    private EditText editTextCostSum;\r\n    private EditText editTextDtIn;\r\n    private EditText editTextDtOut;\r\n    private EditText editTextDuration;\r\n    private Spinner spinnerNameFlat;\r\n    private Spinner spinnerRaiting;\r\n    private CheckBox checkBoxReserv;\r\n    private EditText editTextNoteRent;\r\n\r\n\r\n    private long idGuest= 0;\r\n    private long idRent = 0;\r\n    private int idFlat = 0;\r\n    private int duration = 0;\r\n    private long differenceDay; // разница в днях\r\n    private long differenceHour; // разница в часах\r\n    private float costFlat;\r\n    private float costSum;\r\n    private int raitingRent ;\r\n    private Dialog dialogInDateTime,dialogOutDateTime;\r\n    private DatePicker dpIn,dpOut;\r\n    private TimePicker tpIn,tpOut;\r\n    private Button btTpIn,btTpOut;\r\n\r\n\r\n    private Calendar calendar       = Calendar.getInstance();\r\n    private Calendar beginCalendar  = Calendar.getInstance();\r\n    private Calendar endCalendar    = Calendar.getInstance();\r\n    private Calendar beginDayTime  = Calendar.getInstance();\r\n    private Calendar endDayTime    = Calendar.getInstance();\r\n\r\n\r\n    private Cursor guestCursor;\r\n    private Cursor flatCursor;\r\n    private Cursor rentCursor;\r\n    private SimpleCursorAdapter flatAdapter, guestAdapter;\r\n    private SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd.MM.yyyy HH:mm\");\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_edit_rent);\r\n\r\n\r\n\r\n//        calendar.set(Calendar.HOUR, 00);\r\n//        calendar.set(Calendar.MINUTE, 00);\r\n//        calendar.set(Calendar.SECOND, 00);\r\n//        calendar.set(Calendar.MILLISECOND, 000);\r\n\r\n\r\n        spinnerNameFlat = (Spinner) findViewById(R.id.SpinnerNameFlat);\r\n        delButton = (Button) findViewById(R.id.DeleteButton);\r\n        saveButton = (Button) findViewById(R.id.SaveButton);\r\n        buttonSelectGuest = (Button) findViewById(R.id.buttonSelectGuest);\r\n        editTextFio = (EditText) findViewById(R.id.EditTextFio);\r\n        editTextFio.setText(\"\");\r\n        editTextPhone = (EditText) findViewById(R.id.EditTextPhone);\r\n        editTextPhone.setText(\"+7 (\");\r\n\r\n        // устанавливаем маску ввода телефонного номера\r\n        final MaskImpl mask = MaskImpl.createTerminated(PredefinedSlots.RUS_PHONE_NUMBER);\r\n       // mask.setShowingEmptySlots(true);\r\n       // mask.setHideHardcodedHead(true); // default value\r\n       // mask.setForbidInputWhenFilled(true);\r\n\r\n        FormatWatcher formatWatcher = new MaskFormatWatcher(mask);\r\n        formatWatcher.installOn(editTextPhone);\r\n\r\n        editTextCostFlat = (EditText) findViewById(R.id.EditTextCostFlat);\r\n        editTextCostSum = (EditText) findViewById(R.id.EditTextCostSum);\r\n        editTextDtIn = (EditText) findViewById(R.id.EditTextDtIn);\r\n        editTextDtOut = (EditText) findViewById(R.id.EditTextDtOut);\r\n        editTextDuration = (EditText) findViewById(EditTextDuration);\r\n        spinnerRaiting = (Spinner) findViewById(R.id.SpinnerRaiting);\r\n        //-------- заполняем список рейтинга проживания-----------\r\n        spinnerRaiting.setSelection(2);\r\n        checkBoxReserv = (CheckBox) findViewById(R.id.checkBoxReserv);\r\n        editTextNoteRent = (EditText) findViewById(EditTextNoteRent);\r\n\r\n\r\n\r\n        sqlHelper = new DatabaseHelper(this);\r\n        db = sqlHelper.getWritableDatabase();\r\n\r\n        // получаем начальные значения\r\n        Bundle extras = getIntent().getExtras();\r\n        if (extras != null) {\r\n            idRent = extras.getLong(\"idRent\",0);\r\n            idFlat = extras.getInt(\"idFlat\",0);;\r\n            idGuest = extras.getInt(\"idGuest\",0);\r\n            calendar.setTimeInMillis(extras.getLong(\"calendar\", calendar.getTimeInMillis() ));\r\n            Log.d(\"myLogs\", \"---Получено время  \" + calendar.getTime() );\r\n        }\r\n\r\n        // устанавливаем время заезда по умолчанию 13:00- заезд 12:00- выезд\r\n       // время заезда 13 часов\r\n        beginCalendar.setTimeInMillis( calendar.getTimeInMillis());\r\n        beginCalendar.set(Calendar.HOUR_OF_DAY, 13);\r\n        beginCalendar.set(Calendar.MINUTE, 00);\r\n        beginCalendar.set(Calendar.SECOND, 00);\r\n        beginCalendar.set(Calendar.MILLISECOND, 000);\r\n        Log.d(\"myLogs\", \"---beginCalendar  \" + beginCalendar.getTime() );\r\n         // время выезда 12 часов\r\n        endCalendar.setTimeInMillis( calendar.getTimeInMillis());\r\n        endCalendar.add(Calendar.DATE, 1); // прибавляем день т.е. выезд на следующий день\r\n        endCalendar.set(Calendar.HOUR_OF_DAY, 12);\r\n        endCalendar.set(Calendar.MINUTE, 00);\r\n        endCalendar.set(Calendar.SECOND, 00);\r\n        endCalendar.set(Calendar.MILLISECOND, 00);\r\n        Log.d(\"myLogs\", \"---endCalendar  \" + endCalendar.getTime() );\r\n        // время начала дня устанавливаем 00 часов\r\n        beginDayTime.setTimeInMillis(beginCalendar.getTimeInMillis());\r\n        beginDayTime.set(Calendar.HOUR_OF_DAY, 00);\r\n        // время конца дня устанавливаем 23:59 часов\r\n        endDayTime.setTimeInMillis(endCalendar.getTimeInMillis());\r\n        endDayTime.set(Calendar.HOUR_OF_DAY, 23);\r\n        endDayTime.set(Calendar.MINUTE, 59);\r\n        endDayTime.set(Calendar.SECOND, 59);\r\n        endDayTime.set(Calendar.MILLISECOND, 99);\r\n\r\n\r\n        //--------------- завполняем список квартир----------\r\n        //получаем данные из бд в виде курсора\r\n        flatCursor =  db.rawQuery(\"select * from \"+ DatabaseHelper.TABLE_Flats, null);\r\n        // определяем, какие столбцы из курсора будут выводиться в ListView\r\n        String[] flatHeaders = new String[] {DatabaseHelper.COLUMN_FLATS_NameFlat, DatabaseHelper.COLUMN_FLATS_CostFlat};\r\n        // создаем адаптер, передаем в него курсор\r\n        flatAdapter = new SimpleCursorAdapter(this, android.R.layout.two_line_list_item,\r\n                flatCursor, flatHeaders, new int[]{android.R.id.text1, android.R.id.text2}, 0);\r\n        spinnerNameFlat.setAdapter(flatAdapter);\r\n        // учтанавливаем значение места проживания\r\n        //spinnerNameFlat.setSelection(idFlat);\r\n\r\n\r\n\r\n\r\n\r\n    //---------- если есть код гостя то выводим фамилию и номер телефона\r\n\r\n        if (idRent > 0) { // то редактирование\r\n            // получаем элемент по id из бд\r\n            String strinSQL = \"SELECT *, r._id as _id  FROM \"+ DatabaseHelper.TABLE_Rents + \" as r \"\r\n                    +\" INNER JOIN \" + DatabaseHelper.TABLE_Flats + \" as f\"\r\n                    +\" ON r.idFlat = f._id \"\r\n                    +\" INNER JOIN \" + DatabaseHelper.TABLE_Guests + \" as g \"\r\n                    +\" ON r.idGuest = g._id \"\r\n                    +\" where r._id = \" + idRent;\r\n\r\n            //rentCursor.close();\r\n            rentCursor = db.rawQuery(strinSQL, null);\r\n            rentCursor.moveToFirst();\r\n            Log.d(\"myLogs\", \"--- В таблице rent найдено записей---\" + rentCursor.getCount() );\r\n            if (rentCursor.getCount()>0) {\r\n\r\n                // заполняем поля реактирования\r\n                Log.d(\"myLogs\", \"--- IdFlat ---= \" + rentCursor.getInt(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_IdFlat)));\r\n                idFlat = rentCursor.getInt(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_IdFlat));\r\n                spinnerNameFlat.setId(idFlat); //в спиннере устанавливаем записанную квартиру\r\n                spinnerRaiting.setSelection(rentCursor.getInt(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_RatingRent)));\r\n                idGuest = rentCursor.getInt(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_IdGuest));\r\n                costFlat = rentCursor.getFloat(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_FLATS_CostFlat));\r\n                costSum = rentCursor.getFloat(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_Cost));\r\n                editTextFio.setText(rentCursor.getString(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_GUEST_Fio)));\r\n                editTextPhone.setText(rentCursor.getString(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_GUEST_Phone)));\r\n                beginCalendar.setTimeInMillis(rentCursor.getLong(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_DtIn)));\r\n                endCalendar.setTimeInMillis(rentCursor.getLong(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_DtOut)));\r\n                editTextNoteRent.setText(rentCursor.getString(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_NoteRent)));\r\n\r\n                if (rentCursor.getInt(rentCursor.getColumnIndex(DatabaseHelper.COLUMN_RENTS_Reserv)) == 0) {\r\n                    checkBoxReserv.setChecked(false);\r\n                } else {\r\n                    checkBoxReserv.setChecked(true);\r\n                }\r\n            }\r\n            else {\r\n\r\n            }\r\n           // guestCursor.close();\r\n        } else { // добавление новой записи\r\n            // при добавлении новой записи изначально общая сумма проживания ровна стоимости одного дня проживания\r\n            costSum = flatCursor.getFloat(flatCursor.getColumnIndex(DatabaseHelper.COLUMN_FLATS_CostFlat));\r\n            // уствнвка начального значения резерва\r\n            setCheckBoxReserv(beginCalendar);;\r\n            // скрываем кнопку удаления\r\n            delButton.setVisibility(View.GONE);\r\n\r\n        }\r\n        //----- выводим начальное дата и время заезда и выезда\r\n        setDateTimeToEditText();\r\n\r\n        // ------при потере фокуса с ввода телефонного номера ищем существующий\r\n        editTextPhone.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n\r\n                if (!hasFocus) { // если потерял фокус\r\n                    // поиск номера телефона в базе гостей\r\n                    guestCursor = db.rawQuery(\"select * from \" + DatabaseHelper.TABLE_Guests + \" where \" +\r\n                            DatabaseHelper.COLUMN_GUEST_Phone + \"=?\", new String[]{editTextPhone.getText().toString()});\r\n\r\n                    if (guestCursor.getCount() > 0) {\r\n                        guestCursor.moveToFirst();// заполняем поле имени из базы\r\n                        editTextFio.setText(guestCursor.getString(guestCursor.getColumnIndex(DatabaseHelper.COLUMN_GUEST_Fio)));\r\n                        idGuest = guestCursor.getLong(guestCursor.getColumnIndex(DatabaseHelper.COLUMN_GUEST_ID));\r\n                        editTextFio.setEnabled(false);\r\n                    } else {\r\n                        idGuest = 0;\r\n                        editTextFio.setEnabled(true);\r\n                        editTextFio.setText(null);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        //////////////////////// Рабора с батой и временем заезда и выезда\r\n        // Формируем диалоговое окно для выбора даты и времени\r\n        dialogInDateTime = new Dialog(this);\r\n        dialogInDateTime.setContentView(R.layout.date_time_select);\r\n\r\n        dialogOutDateTime = new Dialog(this);\r\n        dialogOutDateTime.setContentView(R.layout.date_time_select);\r\n\r\n        // обработка выбора времени\r\n        dpIn = (DatePicker)dialogInDateTime.findViewById(R.id.datePicker1);\r\n        tpIn = (TimePicker)dialogInDateTime.findViewById(R.id.timePicker1);\r\n\r\n        tpOut = (TimePicker)dialogOutDateTime.findViewById(R.id.timePicker1);\r\n        dpOut = (DatePicker)dialogOutDateTime.findViewById(R.id.datePicker1);\r\n\r\n\r\n        // ------------обработчик нажатий на дату и время для Выбор даты и времени\r\n        // дата и время заезда\r\n        editTextDtIn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(\"myLogs\", \"---Выбор даты и времени заезда\");\r\n                dialogInDateTime.setTitle(\"Дата и время заезда\");\r\n                dpIn.init(beginCalendar.get(Calendar.YEAR),beginCalendar.get(Calendar.MONTH),beginCalendar.get(Calendar.DAY_OF_MONTH),null);\r\n                tpIn.setHour(beginCalendar.get(Calendar.HOUR_OF_DAY));\r\n                tpIn.setMinute(beginCalendar.get(Calendar.MINUTE));\r\n                tpIn.setIs24HourView(true);\r\n                dialogInDateTime.show();\r\n            }\r\n        });\r\n        // дата и время выезда\r\n        editTextDtOut.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(\"myLogs\", \"---Выбор даты и времени выезда\");\r\n                dialogOutDateTime.setTitle(\"Дата и время выезда\");\r\n                dpOut.init(endCalendar.get(Calendar.YEAR),endCalendar.get(Calendar.MONTH),endCalendar.get(Calendar.DAY_OF_MONTH),null);\r\n                tpOut.setHour(endCalendar.get(Calendar.HOUR_OF_DAY));\r\n                tpOut.setMinute(endCalendar.get(Calendar.MINUTE));\r\n                tpOut.setIs24HourView(true);\r\n                dialogOutDateTime.show();\r\n            }\r\n        });\r\n\r\n        // ----------кнопка выбора баты и времени заезда, действия при нажатии выбрать\r\n        btTpIn = (Button) dialogInDateTime.findViewById(R.id.buttonSelect);\r\n        btTpIn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n               // устанавливаем выбранный день и время\r\n                beginCalendar.set(Calendar.YEAR,dpIn.getYear() );\r\n                beginCalendar.set(Calendar.MONTH,dpIn.getMonth());\r\n                beginCalendar.set(Calendar.DAY_OF_MONTH,dpIn.getDayOfMonth() );\r\n                beginCalendar.set(Calendar.HOUR_OF_DAY, tpIn.getHour() );\r\n                beginCalendar.set(Calendar.MINUTE,tpIn.getMinute());\r\n                beginCalendar.set(Calendar.SECOND, 00);\r\n                beginCalendar.set(Calendar.MILLISECOND, 000);\r\n                //Log.d(\"myLogs\", \"---Выброна дата и время заезда = \"+beginCalendar.getTime());\r\n\r\n                // проверяем если дата заезда раньше даты выезда\r\n                // если дата выезда раньше даты заезда то меняем дату выезда\r\n                if (beginCalendar.getTimeInMillis()>endCalendar.getTimeInMillis()) {\r\n                    // прибавляем количество дней проживания  к дате заезда\r\n                    endCalendar.set(Calendar.YEAR,beginCalendar.get(Calendar.YEAR) );\r\n                    endCalendar.set(Calendar.MONTH,beginCalendar.get(Calendar.MONTH));\r\n                    endCalendar.set(Calendar.DAY_OF_MONTH,beginCalendar.get(Calendar.DAY_OF_MONTH) );\r\n                    endCalendar.add(Calendar.DATE, (int)differenceDay);\r\n                    Toast.makeText(getBaseContext(),\"Дата выезда исправлена, т.к. дата заезда позже даты выезда \", Toast.LENGTH_LONG).show();\r\n                };\r\n                setDateTimeToEditText();\r\n                setCheckBoxReserv(beginCalendar);\r\n                dialogInDateTime.cancel();\r\n\r\n            }\r\n        });\r\n\r\n        // кнопка выбора баты и времени выезда\r\n        btTpOut = (Button) dialogOutDateTime.findViewById(R.id.buttonSelect);\r\n        btTpOut.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                endCalendar.set(Calendar.YEAR,dpOut.getYear() );\r\n                endCalendar.set(Calendar.MONTH,dpOut.getMonth());\r\n                endCalendar.set(Calendar.DAY_OF_MONTH,dpOut.getDayOfMonth() );\r\n                endCalendar.set(Calendar.HOUR_OF_DAY,tpOut.getHour() );\r\n                endCalendar.set(Calendar.MINUTE,tpOut.getMinute());\r\n                endCalendar.set(Calendar.SECOND, 00);\r\n                endCalendar.set(Calendar.MILLISECOND, 000);\r\n               // Log.d(\"myLogs\", \"---Выброна дата и время выезда = \"+endCalendar.getTime());\r\n\r\n                // проверяем если дата заезда раньше даты выезда\r\n                if (beginCalendar.getTimeInMillis()<endCalendar.getTimeInMillis()) {\r\n\r\n                    setDateTimeToEditText();\r\n                    dialogOutDateTime.cancel();\r\n                }\r\n                else{\r\n                    Toast.makeText(getBaseContext(),\"Дата и время выезда раньше даты заезда \", Toast.LENGTH_LONG).show();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        //////////////////////////////////////////////////\r\n        //--------------------- обрабатываем выбор квартиры\r\n        spinnerNameFlat.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n                idFlat = (int)id; //код выбранной квартиры\r\n                costFlat = flatCursor.getFloat(flatCursor.getColumnIndex(DatabaseHelper.COLUMN_FLATS_CostFlat));\r\n               // costSum =\r\n                setDateTimeToEditText();\r\n\r\n              //  Toast.makeText(getBaseContext(), \"Position = \" + position +\"  id = \"+id, Toast.LENGTH_LONG).show();\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        // обработка потери фокуса, редактирования количество дней проживания\r\n        editTextDuration.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (!hasFocus) { // если потерял фокус\r\n\r\n                    try{\r\n                        //String str = editTextCostSum.getText().toString();\r\n                        differenceDay = Integer.valueOf(editTextDuration.getText().toString());\r\n                        // расчитываем дату прибавиви к начальной дате количество дней\r\n                        endCalendar.set(Calendar.YEAR,beginCalendar.get(Calendar.YEAR) );\r\n                        endCalendar.set(Calendar.MONTH,beginCalendar.get(Calendar.MONTH));\r\n                        endCalendar.set(Calendar.DAY_OF_MONTH,beginCalendar.get(Calendar.DAY_OF_MONTH) );\r\n                        endCalendar.add(Calendar.DATE, (int)differenceDay); // прибавляем дни\r\n                        setDateTimeToEditText();\r\n\r\n                    }\r\n\r\n                    catch(Exception e) {\r\n                        System.out.println(\"Exception: \"+ e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n// обработка потери фокуса, редактирования стоимости проживания\r\n        editTextCostFlat.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (!hasFocus) { // если потерял фокус\r\n\r\n                    try{\r\n                        //String str = editTextCostSum.getText().toString();\r\n\r\n                        costFlat = Float.parseFloat(editTextCostFlat.getText().toString());\r\n                        setDateTimeToEditText();\r\n\r\n                    }\r\n\r\n                    catch(Exception e) {\r\n                        System.out.println(\"Exception: \"+ e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // обработка потери фокуса, редактирование суммы проживания\r\n        editTextCostSum.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if (!hasFocus) { // если потерял фокус\r\n\r\n                    try{\r\n                        //String str = editTextCostSum.getText().toString();\r\n\r\n                        costFlat = Float.parseFloat(editTextCostSum.getText().toString())/differenceDay;\r\n                        setDateTimeToEditText();\r\n\r\n                    }\r\n\r\n                    catch(Exception e) {\r\n                        System.out.println(\"Exception: \"+ e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n/////////----------  Сохранение или добавление записи аренды\r\n        saveButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                // проверяем корректность ввода мобильного номера\r\n                if (editTextPhone.getText().toString().trim().length() < 18 )  {\r\n                    Toast.makeText(getBaseContext(), \"Не введен полный номер телефона\" , Toast.LENGTH_LONG).show();\r\n                    return;\r\n                }\r\n\r\n                // проверяем заполнеие ФИО\r\n                if (!(editTextFio.getText().toString().trim().length() > 1)) {\r\n                    Toast.makeText(getBaseContext(), \"Введите или выберите имя\" , Toast.LENGTH_LONG).show();\r\n                    return;\r\n                };\r\n\r\n                // проверяем занятость квартиры в данном промежутке времени\r\n                if (chekRentInOccupation( idFlat, beginCalendar, endCalendar )) {\r\n                     return;\r\n                };\r\n\r\n                // добавляем нового жильца если он не выбран из базы\r\n                if (idGuest == 0){\r\n                    ContentValues cvGuest = new ContentValues();\r\n                    cvGuest.put(DatabaseHelper.COLUMN_GUEST_Fio, editTextFio.getText().toString());\r\n                    cvGuest.put(DatabaseHelper.COLUMN_GUEST_Phone, editTextPhone.getText().toString());\r\n                    cvGuest.put(DatabaseHelper.COLUMN_GUEST_RaitingGuest, 2);\r\n                    //cvGuest.put(DatabaseHelper.COLUMN_GUEST_NoteGuest, editTextNoteGuest.getText().toString());\r\n                    cvGuest.put(DatabaseHelper.COLUMN_GUEST_DtEditGuest, Calendar.getInstance().getTime().toString());\r\n\r\n                    idGuest =  db.insert(DatabaseHelper.TABLE_Guests, null, cvGuest);\r\n                  //  Log.d(\"myLogs\", \"---Добавлена запись _Id = \" + idGuest );\r\n                }\r\n\r\n                ContentValues cv = new ContentValues();\r\n                //cv.put(DatabaseHelper.COLUMN_FLATS_NameFlat, editTextNameFlate.getText().toString());\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_IdFlat,      idFlat);\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_IdGuest,     idGuest);\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_DtIn,        beginCalendar.getTimeInMillis());\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_DtOut,       endCalendar.getTimeInMillis());\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_Duration,    differenceDay);\r\n                //cv.put(DatabaseHelper.COLUMN_RENTS_Reserv,\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_Cost,        costSum);\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_NoteRent,    editTextNoteRent.getText().toString());\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_RatingRent,  spinnerRaiting.getSelectedItemId());\r\n                //Log.d(\"myLogs\", \"---рейтинг Id = \" + spinnerRaiting.getSelectedItemId() );\r\n                if (checkBoxReserv.isChecked() == false){\r\n                    cv.put(DatabaseHelper.COLUMN_RENTS_Reserv,  0);\r\n                }\r\n                else {\r\n                    cv.put(DatabaseHelper.COLUMN_RENTS_Reserv,  1);\r\n                };\r\n                cv.put(DatabaseHelper.COLUMN_RENTS_dtEditRent,  Calendar.getInstance().toString());\r\n                if (idRent > 0) {\r\n                    db.update(DatabaseHelper.TABLE_Rents, cv, DatabaseHelper.COLUMN_RENTS_ID + \"=\" + String.valueOf(idRent), null);\r\n                } else {\r\n                    idRent = db.insert(DatabaseHelper.TABLE_Rents, null, cv);\r\n                    //Log.d(\"myLogs\", \"---Добавлена запись _Id = \" + idRent );\r\n                };\r\n                goHome();\r\n            }\r\n        });\r\n\r\n       //  ----------- удаление записи\r\n        delButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                db.delete(DatabaseHelper.TABLE_Rents, \"_id = ?\", new String[]{String.valueOf(idRent)});\r\n                idRent = 0;\r\n                goHome();\r\n            }\r\n        });\r\n    }\r\n\r\n    // по нажатию на кнопку запускаем activity выбора гостя\r\n    public void addGuestButtonClick(View view){\r\n        Intent intent = new Intent(this, ShowGuestActivity.class);\r\n        intent.putExtra(\"idGuest\", idGuest);\r\n\r\n        startActivityForResult(intent, 1);\r\n    }\r\n\r\n\r\n// получение данных гостя из списка гостей возвращаемая ShowGuestActivity\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n        idGuest = data.getIntExtra(\"idGuest\",0);\r\n\r\n        if (idGuest > 0) {// ищев выбранного пользователя в таблице и заполняем поле для редактирования\r\n            // получаем элемент по id из бд\r\n            guestCursor = db.rawQuery(\"select * from \" + DatabaseHelper.TABLE_Guests + \" where \" +\r\n                    DatabaseHelper.COLUMN_GUEST_ID + \"=?\", new String[]{String.valueOf(idGuest)});\r\n            guestCursor.moveToFirst();\r\n            // заполняем поля реактирования\r\n            editTextFio.setText(guestCursor.getString(guestCursor.getColumnIndex(DatabaseHelper.COLUMN_GUEST_Fio)));\r\n            editTextPhone.setText(guestCursor.getString(guestCursor.getColumnIndex(DatabaseHelper.COLUMN_GUEST_Phone)));\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onDestroy(){\r\n        super.onDestroy();\r\n        // Закрываем подключение и курсор\r\n        /*guestCursor.close();\r\n        flatCursor.close();\r\n        rentCursor.close();\r\n        db.close();\r\n         */\r\n    }\r\n\r\n\r\n// заполняем дату, время, сумму проживания значениями\r\n    private void setDateTimeToEditText() {\r\n        // задаем время конца дня выезда для расчета количесуа дней проживания\r\n        endDayTime.setTimeInMillis(endCalendar.getTimeInMillis());\r\n        endDayTime.set(Calendar.HOUR, 23);\r\n        endDayTime.set(Calendar.MINUTE, 59);\r\n        endDayTime.set(Calendar.SECOND, 59);\r\n        endDayTime.set(Calendar.MILLISECOND, 99);\r\n\r\n        // ---------------- вычисляем длительность проживания\r\n        long difference = endDayTime.getTimeInMillis() - beginCalendar.getTimeInMillis();\r\n        differenceDay = difference /(24*60 * 60 * 1000);\r\n        differenceHour = difference /(60 * 60 * 1000);\r\n        //Log.d(\"myLogs\", \"--- разница дат  ---дней\" + differenceDay + \"  часов \"+ differenceHour);\r\n        // если количество дней проживания больше одного\r\n        if (differenceDay>0 ){\r\n            costSum = costFlat * differenceDay;\r\n        };\r\n\r\n        editTextDuration.setText(Long.toString(differenceDay));\r\n        editTextCostFlat.setText(String.valueOf(costFlat));\r\n        editTextCostSum.setText(String.valueOf(costSum));\r\n\r\n        editTextDtIn.setText(dateFormat.format(beginCalendar.getTime()));\r\n        editTextDtOut.setText(dateFormat.format(endCalendar.getTime()));\r\n\r\n    }\r\n\r\n    // устанавливаем бронь если дата заезда позже следующего дня\r\n    private void setCheckBoxReserv(Calendar bCalendar){\r\n        Calendar bcal = Calendar.getInstance();\r\n        bcal.add(Calendar.DATE, 1); // прибавляем день к текущему\r\n        bcal = setHourInDayToCalendar (bcal, 12);\r\n        // если дата заезда позже 12 следующего дня то бронь\r\n        if  (bcal.getTimeInMillis() <  bCalendar.getTimeInMillis()){\r\n            checkBoxReserv.setChecked(true);\r\n        }\r\n        else{\r\n            checkBoxReserv.setChecked(false);\r\n        }\r\n    }\r\n\r\n\r\n    // устанавливаем время в календаре на начал дня\r\n    private Calendar setHourInDayToCalendar (Calendar cal, int hour){\r\n         Calendar bcal = Calendar.getInstance();\r\n         bcal.setTimeInMillis(cal.getTimeInMillis());\r\n         bcal.set(Calendar.HOUR_OF_DAY, hour);\r\n         bcal.set(Calendar.MINUTE, 00);\r\n         bcal.set(Calendar.SECOND, 00);\r\n         bcal.set(Calendar.MILLISECOND, 000);\r\n         return bcal;\r\n    }\r\n\r\n\r\n\r\n\r\n    private void goHome(){\r\n        // закрываем подключение\r\n     //   db.close();\r\n        // переход к главной activity\r\n       // Intent intent = new Intent(this, ShowRentsActivity.class);\r\n      //  intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);\r\n      //  startActivity(intent);\r\n\r\n        Intent intent = new Intent();\r\n        intent.putExtra(\"idR\",idRent);\r\n        intent.putExtra(\"calendar\",beginCalendar.getTimeInMillis());\r\n        setResult(RESULT_OK, intent);\r\n\r\n        finish();\r\n    }\r\n\r\n    // проверяем свободна ли на данное время квартира для заселения\r\n    protected Boolean  chekRentInOccupation (int idFl, Calendar begCal, Calendar endCal ){\r\n        //получаем данные из бд в виде курсора\r\n       final String strinSQL = \"SELECT * FROM \"+ DatabaseHelper.TABLE_Rents\r\n                +\" where (( dtIn >= \"+ begCal.getTimeInMillis()+\"  and dtIn <= \"+ endCal.getTimeInMillis()+\" ) \"\r\n                +\" or ( dtOut >= \"+ begCal.getTimeInMillis()+\"  and dtOut <= \"+ endCal.getTimeInMillis()+\" )) \"\r\n                +\" and idFlat = \" + idFl;\r\n\r\n       final Cursor cur  = db.rawQuery(strinSQL, null);\r\n       // если количество записей больше 0 то в данном промежутке квартира занята\r\n       if (cur.getCount() > 0 ){\r\n           Toast.makeText(getBaseContext(), \"В данном промежутке времени квартира занята\" , Toast.LENGTH_LONG).show();\r\n           return true; // квартира занята\r\n       }\r\n       else{\r\n           return false; // квартира свободна\r\n       }\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/java/com/example/myapp1/EditRentActivity.java	(date 1576244164000)
+++ myapp1/src/main/java/com/example/myapp1/EditRentActivity.java	(date 1576480054030)
@@ -477,7 +477,7 @@
                 };
 
                 // проверяем занятость квартиры в данном промежутке времени
-                if (chekRentInOccupation( idFlat, beginCalendar, endCalendar )) {
+                if (chekRentInOccupation( idGuest, idFlat, beginCalendar, endCalendar )) {
                      return;
                 };
 
@@ -650,12 +650,12 @@
     }
 
     // проверяем свободна ли на данное время квартира для заселения
-    protected Boolean  chekRentInOccupation (int idFl, Calendar begCal, Calendar endCal ){
+    protected Boolean  chekRentInOccupation (long idGu, int idFl, Calendar begCal, Calendar endCal ){
         //получаем данные из бд в виде курсора
        final String strinSQL = "SELECT * FROM "+ DatabaseHelper.TABLE_Rents
                 +" where (( dtIn >= "+ begCal.getTimeInMillis()+"  and dtIn <= "+ endCal.getTimeInMillis()+" ) "
                 +" or ( dtOut >= "+ begCal.getTimeInMillis()+"  and dtOut <= "+ endCal.getTimeInMillis()+" )) "
-                +" and idFlat = " + idFl;
+               +" and idFlat = " + idFl +" and idGuest <> " + idGu ;
 
        final Cursor cur  = db.rawQuery(strinSQL, null);
        // если количество записей больше 0 то в данном промежутке квартира занята
Index: myapp1/src/main/res/values/styles/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- myapp1/src/main/res/values/styles/styles.xml	(date 1576475687598)
+++ myapp1/src/main/res/values/styles/styles.xml	(date 1576475687598)
@@ -0,0 +1,49 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.MaterialComponents.Light.DarkActionBar">
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <!-- Activity with no Title -->
+    <style name="ThemeOverlay.MyNoTitleActivity" parent="AppTheme">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <!-- Dark Buttons -->
+    <style name="ThemeOverlay.MyDarkButton" parent="ThemeOverlay.AppCompat.Dark">
+        <item name="colorButtonNormal">@color/grey_500</item>
+        <item name="colorAccent">@color/colorAccent</item>
+        <item name="android:layout_marginRight">4dp</item>
+        <item name="android:layout_marginLeft">4dp</item>
+        <item name="android:textColor">@android:color/white</item>
+    </style>
+
+    <!-- Light EditTexts -->
+    <style name="ThemeOverlay.MyLightEditText" parent="ThemeOverlay.AppCompat.Dark"/>
+
+    <style name="ThemeOverlay.MyTextDetail" parent="AppTheme">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:fadeScrollbars">true</item>
+        <item name="android:gravity">center</item>
+        <item name="android:maxLines">5</item>
+        <item name="android:padding">4dp</item>
+        <item name="android:scrollbars">vertical</item>
+        <item name="android:textSize">14sp</item>
+    </style>
+
+    <style name="ThemeOverlay.FirebaseIcon" parent="AppTheme">
+        <item name="android:layout_marginTop">@dimen/icon_top_margin</item>
+        <item name="android:layout_marginBottom">@dimen/icon_bottom_margin</item>
+    </style>
+
+    <style name="ThemeOverlay.MyTitleText" parent="AppTheme">
+        <item name="android:gravity">center</item>
+        <item name="android:textSize">36sp</item>
+    </style>
+
+</resources>
